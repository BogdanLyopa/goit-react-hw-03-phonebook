{"version":3,"sources":["Components/ContactsList/ContactsListItem/ContactsListItem.module.css","Components/Filter/Filter.module.css","Components/Form/Form.js","Components/ContactsList/ContactsListItem/ContactsListItem.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","Form","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onCheckUnique","onSubmit","reset","validateFrom","className","styles","form","this","label","htmlFor","type","pattern","title","required","placeholder","onChange","id","button","Component","ContactsListItem","onRemove","item","onClick","ContactsList","contacts","length","map","contact","Filter","filter","filterLabel","App","handleAddContact","newContact","handleRemoveContact","prevState","handleCheckUniqueContact","check","find","alert","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d881f5fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactsListItem_button__3vTC2\",\"item\":\"ContactsListItem_item__2rbH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__hirRZ\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './Form.module.css';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.onCheckUnique(this.state.name)) {\r\n      this.reset();\r\n\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  validateFrom = () => {};\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label} htmlFor={this.nameInputId}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              placeholder=\"Enter name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              id={this.nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.label} htmlFor={this.numberInputId}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              placeholder=\"Enter phone number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              id={this.numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import styles from './ContactsListItem.module.css';\r\n\r\nconst ContactsListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      {name} : {number}\r\n      <button className={styles.button} onClick={() => onRemove(id)}>\r\n        Remove\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import ContactsListItem from './ContactsListItem/ContactsListItem';\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <>\r\n      <h2>Contacts</h2>\r\n      <ul>\r\n        {contacts.map(contact => (\r\n          <ContactsListItem key={contact.id} {...contact} onRemove={onRemove} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className={styles.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={({ target }) => onChange(target.value)}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\nimport Filter from './Components/Filter';\n\nimport './styles.css';\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleAddContact = contact => {\n    const newContact = {\n      id: uuidv4(),\n      ...contact,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n  };\n\n  handleRemoveContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n    const check = contacts.find(contact => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert('Contact is already exist');\n      return check;\n    }\n  };\n\n  handleFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const { filter } = this.state;\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Form\n          onSubmit={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueContact}\n        />\n        {this.state.contacts.length > 0 && (\n          <Filter filter={filter} onChange={this.handleFilterChange} />\n        )}\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1zSLL\",\"button\":\"Form_button__LTyiV\",\"label\":\"Form_label__3US3o\"};"],"sourceRoot":""}